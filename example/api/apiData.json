{
  "openapi": "3.0.1",
  "info": {
    "title": "组态",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "user"
    },
    {
      "name": "user/(Menu)表控制层"
    },
    {
      "name": "user/(User)表控制层"
    },
    {
      "name": "user/(Role)表控制层"
    },
    {
      "name": "user/文件上传与下载"
    },
    {
      "name": "user/(Personalization)表控制层"
    },
    {
      "name": "user/(UserOperationRecord)表控制层"
    }
  ],
  "paths": {
    "/menu/getMenuTreeByRoleId": {
      "get": {
        "summary": "根据角色id查菜单树",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Menu)表控制层"],
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "description": "角色id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListMenuTreeVO",
                  "description": "返回菜单树"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": [
                        {
                          "id": 0,
                          "parent": 0,
                          "name": "",
                          "code": "",
                          "icon": "",
                          "sort": "",
                          "extra": "",
                          "identifier": [""],
                          "children": [
                            {
                              "id": 0,
                              "parent": 0,
                              "name": "",
                              "code": "",
                              "icon": "",
                              "sort": "",
                              "extra": "",
                              "identifier": [""],
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/menu/getMenuTree": {
      "get": {
        "summary": "获取所有菜单树",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Menu)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListMenuTreeVO",
                  "description": "返回菜单树"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": [
                        {
                          "id": 0,
                          "parent": 0,
                          "name": "",
                          "code": "",
                          "icon": "",
                          "sort": "",
                          "extra": "",
                          "identifier": [""],
                          "children": [
                            {
                              "id": 0,
                              "parent": 0,
                              "name": "",
                              "code": "",
                              "icon": "",
                              "sort": "",
                              "extra": "",
                              "identifier": [""],
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/menu/add": {
      "post": {
        "summary": "新增",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Menu)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuDTO",
                "description": ""
              },
              "example": {
                "parent": 4,
                "name": "接口新增",
                "code": "接口新增",
                "icon": "接口新增",
                "sort": "1",
                "extra": "",
                "identifier": ["1", "2"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/menu/edit": {
      "post": {
        "summary": "编辑",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Menu)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuEditDTO",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/menu/delete": {
      "post": {
        "summary": "删除",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Menu)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/menu/editSort": {
      "post": {
        "summary": "修改菜单排序",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Menu)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MenuSortDTO",
                  "description": "com.afdi.ambition.common.dto.user.MenuSortDTO"
                },
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/doLogin": {
      "post": {
        "summary": "doLogin",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO",
                "description": ""
              },
              "example": {
                "username": "yms",
                "password": "dd5fef9c1c1da1394d6d34b248c51be2ad740840"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUserLoginInfoVO"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/getMenuTreeByToken": {
      "get": {
        "summary": "getMenuTreeByToken",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListMenuTreeVO",
                  "description": "返回菜单树"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": [
                        {
                          "id": 0,
                          "parent": 0,
                          "name": "",
                          "code": "",
                          "icon": "",
                          "sort": "",
                          "extra": "",
                          "identifier": [""],
                          "children": [
                            {
                              "id": 0,
                              "parent": 0,
                              "name": "",
                              "code": "",
                              "icon": "",
                              "sort": "",
                              "extra": "",
                              "identifier": [""],
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/logout": {
      "get": {
        "summary": "logout",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/modifyPassword": {
      "post": {
        "summary": "modifyPassword",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyPasswordDTO",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/page": {
      "get": {
        "summary": "page",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "description": "",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isEnable",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePageUserVO"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": {
                        "records": [
                          {
                            "id": 0,
                            "username": "",
                            "nickname": "",
                            "phone": "",
                            "isEnable": "",
                            "roles": [
                              {
                                "id": 0,
                                "name": "",
                                "description": ""
                              }
                            ],
                            "createTime": ""
                          }
                        ],
                        "total": 0,
                        "size": 0,
                        "current": 0,
                        "orders": [
                          {
                            "column": "",
                            "asc": false
                          }
                        ],
                        "optimizeCountSql": false,
                        "searchCount": false,
                        "optimizeJoinOfCountSql": false,
                        "maxLimit": 0,
                        "countId": ""
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/add": {
      "post": {
        "summary": "add",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/setEnable": {
      "get": {
        "summary": "setEnable",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "用户id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isEnable",
            "in": "query",
            "description": "状态",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/edit": {
      "post": {
        "summary": "edit",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditDTO",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/delete": {
      "get": {
        "summary": "delete",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/reset": {
      "get": {
        "summary": "reset",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/export": {
      "get": {
        "summary": "export",
        "deprecated": false,
        "description": "",
        "tags": ["user/(User)表控制层"],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isEnable",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/role/page": {
      "get": {
        "summary": "page",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Role)表控制层"],
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "description": "",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response%C2%ABPage%C2%ABRoleVO%C2%BB%C2%BB"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": {
                        "records": [
                          {
                            "id": 0,
                            "name": "",
                            "description": ""
                          }
                        ],
                        "total": 0,
                        "size": 0,
                        "current": 0,
                        "orders": [
                          {
                            "column": "",
                            "asc": false
                          }
                        ],
                        "optimizeCountSql": false,
                        "searchCount": false,
                        "optimizeJoinOfCountSql": false,
                        "maxLimit": 0,
                        "countId": ""
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/role/add": {
      "post": {
        "summary": "add",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Role)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDTO",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/role/edit": {
      "post": {
        "summary": "edit",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Role)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleEditDTO",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/role/delete": {
      "get": {
        "summary": "delete",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Role)表控制层"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/file/upload": {
      "post": {
        "summary": "upload",
        "deprecated": false,
        "description": "",
        "tags": ["user/文件上传与下载"],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "multipartFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/file/files": {
      "get": {
        "summary": "downloadFile",
        "deprecated": false,
        "description": "",
        "tags": ["user/文件上传与下载"],
        "parameters": [
          {
            "name": "filePath",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseEntity%C2%ABResource%C2%BB"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "inputStream": {},
                      "readable": false,
                      "open": false,
                      "file": {
                        "path": "",
                        "name": "",
                        "parent": "",
                        "parentFile": {
                          "path": "",
                          "name": "",
                          "parent": "",
                          "parentFile": {},
                          "absolute": false,
                          "absolutePath": "",
                          "absoluteFile": {},
                          "canonicalPath": "",
                          "canonicalFile": {},
                          "directory": false,
                          "file": false,
                          "hidden": false,
                          "lastModified": 0,
                          "writable": false,
                          "readable": false,
                          "executable": false,
                          "totalSpace": 0,
                          "freeSpace": 0,
                          "usableSpace": 0
                        },
                        "absolute": false,
                        "absolutePath": "",
                        "absoluteFile": {
                          "path": "",
                          "name": "",
                          "parent": "",
                          "parentFile": {},
                          "absolute": false,
                          "absolutePath": "",
                          "absoluteFile": {},
                          "canonicalPath": "",
                          "canonicalFile": {},
                          "directory": false,
                          "file": false,
                          "hidden": false,
                          "lastModified": 0,
                          "writable": false,
                          "readable": false,
                          "executable": false,
                          "totalSpace": 0,
                          "freeSpace": 0,
                          "usableSpace": 0
                        },
                        "canonicalPath": "",
                        "canonicalFile": {
                          "path": "",
                          "name": "",
                          "parent": "",
                          "parentFile": {},
                          "absolute": false,
                          "absolutePath": "",
                          "absoluteFile": {},
                          "canonicalPath": "",
                          "canonicalFile": {},
                          "directory": false,
                          "file": false,
                          "hidden": false,
                          "lastModified": 0,
                          "writable": false,
                          "readable": false,
                          "executable": false,
                          "totalSpace": 0,
                          "freeSpace": 0,
                          "usableSpace": 0
                        },
                        "directory": false,
                        "file": false,
                        "hidden": false,
                        "lastModified": 0,
                        "writable": false,
                        "readable": false,
                        "executable": false,
                        "totalSpace": 0,
                        "freeSpace": 0,
                        "usableSpace": 0
                      },
                      "uRL": "",
                      "uRI": {
                        "string": "",
                        "absolute": false,
                        "opaque": false,
                        "rawSchemeSpecificPart": "",
                        "rawAuthority": "",
                        "rawUserInfo": "",
                        "rawPath": "",
                        "rawQuery": "",
                        "rawFragment": ""
                      },
                      "contentAsByteArray": [0],
                      "filename": "",
                      "description": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/personalization/getEnabled": {
      "get": {
        "summary": "获取当前启用的方案",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Personalization)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response%C2%ABPersonalizationVO%C2%BB",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": {
                        "name": "",
                        "logo": "",
                        "color": "",
                        "background": ""
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/personalization/setDefault": {
      "get": {
        "summary": "更改为默认值",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Personalization)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/personalization/updateEnabled": {
      "post": {
        "summary": "保存当前",
        "deprecated": false,
        "description": "",
        "tags": ["user/(Personalization)表控制层"],
        "parameters": [
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalizationDTO",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseString",
                  "description": ""
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/userOperationRecord/page": {
      "get": {
        "summary": "page",
        "deprecated": false,
        "description": "",
        "tags": ["user/(UserOperationRecord)表控制层"],
        "parameters": [
          {
            "name": "currentPage",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response%C2%ABPage%C2%ABUserOperationRecordVO%C2%BB%C2%BB"
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": {
                      "code": 0,
                      "message": "",
                      "data": {
                        "records": [
                          {
                            "id": 0,
                            "type": 0,
                            "username": "",
                            "nickname": "",
                            "uri": "",
                            "menu": "",
                            "request": "",
                            "requestType": "",
                            "result": 0,
                            "ip": "",
                            "name": "",
                            "errorMsg": "",
                            "createTime": "",
                            "costTime": 0
                          }
                        ],
                        "total": 0,
                        "size": 0,
                        "current": 0,
                        "orders": [
                          {
                            "column": "",
                            "asc": false
                          }
                        ],
                        "optimizeCountSql": false,
                        "searchCount": false,
                        "optimizeJoinOfCountSql": false,
                        "maxLimit": 0,
                        "countId": ""
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/userOperationRecord/export": {
      "get": {
        "summary": "export",
        "deprecated": false,
        "description": "",
        "tags": ["user/(UserOperationRecord)表控制层"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "result",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ambitionToken",
            "in": "header",
            "description": "",
            "example": "{{ACCESS_TOKEN}}",
            "schema": {
              "type": "string",
              "default": "{{ACCESS_TOKEN}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "MenuTreeVO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": ""
          },
          "parent": {
            "type": "integer",
            "description": "父节点"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "code": {
            "type": "string",
            "description": "编码"
          },
          "icon": {
            "type": "string",
            "description": "图标"
          },
          "sort": {
            "type": "string",
            "description": "顺序"
          },
          "extra": {
            "type": "string",
            "description": "外部数据"
          },
          "identifier": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "标识符"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuTreeVO",
              "description": "com.afdi.ambition.common.vo.user.MenuTreeVO"
            },
            "description": ""
          }
        }
      },
      "PersonalizationVO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "系统名称",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "description": "logo",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "顶部栏颜色",
            "nullable": true
          },
          "background": {
            "type": "string",
            "description": "背景",
            "nullable": true
          }
        }
      },
      "UserOperationRecordVO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "description": "日志类型",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "用户名",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "description": "用户姓名",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "description": "请求地址",
            "nullable": true
          },
          "menu": {
            "type": "string",
            "description": "菜单",
            "nullable": true
          },
          "request": {
            "type": "string",
            "description": "请求参数",
            "nullable": true
          },
          "requestType": {
            "type": "string",
            "description": "请求类型",
            "nullable": true
          },
          "result": {
            "type": "integer",
            "description": "请求结果",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "description": "登录ip",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "日志标题",
            "nullable": true
          },
          "errorMsg": {
            "type": "string",
            "description": "错误消息",
            "nullable": true
          },
          "createTime": {
            "type": "string",
            "description": "创建时间",
            "nullable": true
          },
          "costTime": {
            "type": "integer",
            "description": "请求时间",
            "nullable": true
          }
        }
      },
      "ResponseListMenuTreeVO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": ""
          },
          "message": {
            "type": "string",
            "description": "",
            "default": "ResponseCode.SUCCESS.message()"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuTreeVO",
              "description": "com.afdi.ambition.common.vo.user.MenuTreeVO"
            },
            "description": ""
          }
        }
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": ""
          },
          "password": {
            "type": "string",
            "description": ""
          }
        },
        "required": ["username", "password"]
      },
      "InputStream": {
        "type": "object",
        "properties": {}
      },
      "Response«PersonalizationVO»": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "",
            "default": "ResponseCode.SUCCESS.code()",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "",
            "default": "ResponseCode.SUCCESS.message()",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/PersonalizationVO",
            "description": ""
          }
        }
      },
      "ResponseString": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": ""
          },
          "message": {
            "type": "string",
            "description": "",
            "default": "ResponseCode.SUCCESS.message()"
          },
          "data": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ModifyPasswordDTO": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": ""
          },
          "newPassword": {
            "type": "string",
            "description": ""
          },
          "newPasswordConfirm": {
            "type": "string",
            "description": ""
          }
        },
        "required": ["oldPassword", "newPassword", "newPasswordConfirm"]
      },
      "Page«RoleVO»": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleVO",
              "description": "com.afdi.ambition.common.vo.user.RoleVO"
            },
            "description": "",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "current": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem",
              "description": "com.baomidou.mybatisplus.core.metadata.OrderItem"
            },
            "description": "",
            "nullable": true
          },
          "optimizeCountSql": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "searchCount": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "optimizeJoinOfCountSql": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "maxLimit": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "countId": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string",
            "description": "需要进行排序的字段"
          },
          "asc": {
            "type": "boolean",
            "description": "是否正序排列，默认 true",
            "default": "true"
          }
        }
      },
      "RoleVO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "description": {
            "type": "string",
            "description": "描述"
          }
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "This abstract pathname's normalized pathname string. A normalized\npathname string uses the default name-separator character and does not\ncontain any duplicate or redundant separators.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Returns the name of the file or directory denoted by this abstract\npathname.  This is just the last name in the pathname's name\nsequence.  If the pathname's name sequence is empty, then the empty\nstring is returned.",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "description": "Returns the pathname string of this abstract pathname's parent, or\n{@code null} if this pathname does not name a parent directory.\n\n<p> The <em>parent</em> of an abstract pathname consists of the\npathname's prefix, if any, and each name in the pathname's name\nsequence except for the last.  If the name sequence is empty then\nthe pathname does not name a parent directory.",
            "nullable": true
          },
          "parentFile": {
            "$ref": "#/components/schemas/File",
            "description": "Returns the abstract pathname of this abstract pathname's parent,\nor{@code null} if this pathname does not name a parent\ndirectory.\n\n<p> The <em>parent</em> of an abstract pathname consists of the\npathname's prefix, if any, and each name in the pathname's name\nsequence except for the last.  If the name sequence is empty then\nthe pathname does not name a parent directory."
          },
          "absolute": {
            "type": "boolean",
            "description": "Tests whether this abstract pathname is absolute.  The definition of\nabsolute pathname is system dependent.  On UNIX systems, a pathname is\nabsolute if its prefix is{@code \"/\"}.  On Microsoft Windows systems, a\npathname is absolute if its prefix is a drive specifier followed by\n{@code \"\\\\\"}, or if its prefix is{@code \"\\\\\\\\\"}.",
            "nullable": true
          },
          "absolutePath": {
            "type": "string",
            "description": "Returns the absolute pathname string of this abstract pathname.\n\n<p> If this abstract pathname is already absolute, then the pathname\nstring is simply returned as if by the{@link #getPath}\nmethod.  If this abstract pathname is the empty abstract pathname then\nthe pathname string of the current user directory, which is named by the\nsystem property{@code user.dir}, is returned.  Otherwise this\npathname is resolved in a system-dependent way.  On UNIX systems, a\nrelative pathname is made absolute by resolving it against the current\nuser directory.  On Microsoft Windows systems, a relative pathname is made absolute\nby resolving it against the current directory of the drive named by the\npathname, if any; if not, it is resolved against the current user\ndirectory.",
            "nullable": true
          },
          "absoluteFile": {
            "$ref": "#/components/schemas/File",
            "description": "Returns the abstract pathname of this abstract pathname's parent,\nor{@code null} if this pathname does not name a parent\ndirectory.\n\n<p> The <em>parent</em> of an abstract pathname consists of the\npathname's prefix, if any, and each name in the pathname's name\nsequence except for the last.  If the name sequence is empty then\nthe pathname does not name a parent directory."
          },
          "canonicalPath": {
            "type": "string",
            "description": "Returns the canonical pathname string of this abstract pathname.\n\n<p> A canonical pathname is both absolute and unique.  The precise\ndefinition of canonical form is system-dependent.  This method first\nconverts this pathname to absolute form if necessary, as if by invoking the\n{@link #getAbsolutePath} method, and then maps it to its unique form in a\nsystem-dependent way.  This typically involves removing redundant names\nsuch as{@code \".\"} and{@code \"..\"} from the pathname, resolving\nsymbolic links (on UNIX platforms), and converting drive letters to a\nstandard case (on Microsoft Windows platforms).\n\n<p> Every pathname that denotes an existing file or directory has a\nunique canonical form.  Every pathname that denotes a nonexistent file\nor directory also has a unique canonical form.  The canonical form of\nthe pathname of a nonexistent file or directory may be different from\nthe canonical form of the same pathname after the file or directory is\ncreated.  Similarly, the canonical form of the pathname of an existing\nfile or directory may be different from the canonical form of the same\npathname after the file or directory is deleted.",
            "nullable": true
          },
          "canonicalFile": {
            "$ref": "#/components/schemas/File",
            "description": "Returns the abstract pathname of this abstract pathname's parent,\nor{@code null} if this pathname does not name a parent\ndirectory.\n\n<p> The <em>parent</em> of an abstract pathname consists of the\npathname's prefix, if any, and each name in the pathname's name\nsequence except for the last.  If the name sequence is empty then\nthe pathname does not name a parent directory."
          },
          "directory": {
            "type": "boolean",
            "description": "Tests whether the file denoted by this abstract pathname is a\ndirectory.\n\n<p> Where it is required to distinguish an I/O exception from the case\nthat the file is not a directory, or where several attributes of the\nsame file are required at the same time, then the{@link\n    * java.nio.file.Files#readAttributes(Path,Class,LinkOption[])\n    * Files.readAttributes} method may be used.",
            "nullable": true
          },
          "file": {
            "type": "boolean",
            "description": "Tests whether the file denoted by this abstract pathname is a normal\nfile.  A file is <em>normal</em> if it is not a directory and, in\naddition, satisfies other system-dependent criteria.  Any non-directory\nfile created by a Java application is guaranteed to be a normal file.\n\n<p> Where it is required to distinguish an I/O exception from the case\nthat the file is not a normal file, or where several attributes of the\nsame file are required at the same time, then the{@link\n    * java.nio.file.Files#readAttributes(Path,Class,LinkOption[])\n    * Files.readAttributes} method may be used.",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "description": "Tests whether the file named by this abstract pathname is a hidden\nfile.  The exact definition of <em>hidden</em> is system-dependent.  On\nUNIX systems, a file is considered to be hidden if its name begins with\na period character ({@code '.'}).  On Microsoft Windows systems, a file is\nconsidered to be hidden if it has been marked as such in the filesystem.",
            "nullable": true
          },
          "lastModified": {
            "type": "integer",
            "description": "Sets the last-modified time of the file or directory named by this\nabstract pathname.\n\n<p> All platforms support file-modification times to the nearest second,\nbut some provide more precision.  The argument will be truncated to fit\nthe supported precision.  If the operation succeeds and no intervening\noperations on the file take place, then the next invocation of the\n{@link #lastModified} method will return the (possibly\ntruncated){@code time} argument that was passed to this method.",
            "nullable": true
          },
          "writable": {
            "type": "boolean",
            "description": "A convenience method to set the owner's write permission for this abstract\npathname. On some platforms it may be possible to start the Java virtual\nmachine with special privileges that allow it to modify files that\ndisallow write operations.\n\n<p> An invocation of this method of the form{@code file.setWritable(arg)}\nbehaves in exactly the same way as the invocation\n\n{@snippet lang=java :\n    *     file.setWritable(arg, true)\n    * }",
            "nullable": true
          },
          "readable": {
            "type": "boolean",
            "description": "A convenience method to set the owner's read permission for this abstract\npathname. On some platforms it may be possible to start the Java virtual\nmachine with special privileges that allow it to read files that are\nmarked as unreadable.\n\n<p>An invocation of this method of the form{@code file.setReadable(arg)}\nbehaves in exactly the same way as the invocation\n\n{@snippet lang=java :\n    *     file.setReadable(arg, true)\n    * }",
            "nullable": true
          },
          "executable": {
            "type": "boolean",
            "description": "A convenience method to set the owner's execute permission for this\nabstract pathname. On some platforms it may be possible to start the Java\nvirtual machine with special privileges that allow it to execute files\nthat are not marked executable.\n\n<p>An invocation of this method of the form{@code file.setExcutable(arg)}\nbehaves in exactly the same way as the invocation\n\n{@snippet lang=java :\n    *     file.setExecutable(arg, true)\n    * }",
            "nullable": true
          },
          "totalSpace": {
            "type": "integer",
            "description": "Returns the size of the partition <a href=\"#partName\">named</a> by this\nabstract pathname. If the total number of bytes in the partition is\ngreater than{@link Long#MAX_VALUE}, then{@code Long.MAX_VALUE} will be\nreturned.",
            "nullable": true
          },
          "freeSpace": {
            "type": "integer",
            "description": "Returns the number of unallocated bytes in the partition <a\nhref=\"#partName\">named</a> by this abstract path name.  If the\nnumber of unallocated bytes in the partition is greater than\n{@link Long#MAX_VALUE}, then{@code Long.MAX_VALUE} will be returned.\n\n<p> The returned number of unallocated bytes is a hint, but not\na guarantee, that it is possible to use most or any of these\nbytes.  The number of unallocated bytes is most likely to be\naccurate immediately after this call.  It is likely to be made\ninaccurate by any external I/O operations including those made\non the system outside of this virtual machine.  This method\nmakes no guarantee that write operations to this file system\nwill succeed.",
            "nullable": true
          },
          "usableSpace": {
            "type": "integer",
            "description": "Returns the number of bytes available to this virtual machine on the\npartition <a href=\"#partName\">named</a> by this abstract pathname.  If\nthe number of available bytes in the partition is greater than\n{@link Long#MAX_VALUE}, then{@code Long.MAX_VALUE} will be returned.\nWhen possible, this method checks for write permissions and other\noperating system restrictions and will therefore usually provide a more\naccurate estimate of how much new data can actually be written than\n{@link #getFreeSpace}.\n\n<p> The returned number of available bytes is a hint, but not a\nguarantee, that it is possible to use most or any of these bytes.  The\nnumber of available bytes is most likely to be accurate immediately\nafter this call.  It is likely to be made inaccurate by any external\nI/O operations including those made on the system outside of this\nvirtual machine.  This method makes no guarantee that write operations\nto this file system will succeed.",
            "nullable": true
          }
        }
      },
      "Page«UserOperationRecordVO»": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserOperationRecordVO",
              "description": "(UserOperationRecord)实体类"
            },
            "description": "",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "current": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem",
              "description": "com.baomidou.mybatisplus.core.metadata.OrderItem"
            },
            "description": "",
            "nullable": true
          },
          "optimizeCountSql": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "searchCount": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "optimizeJoinOfCountSql": {
            "type": "boolean",
            "description": "",
            "nullable": true
          },
          "maxLimit": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "countId": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        }
      },
      "MenuDTO": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "integer",
            "description": "父节点",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "名称",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "编码",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "图标",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "description": "顺序",
            "nullable": true
          },
          "extra": {
            "type": "string",
            "description": "外部数据",
            "nullable": true
          },
          "identifier": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        },
        "required": ["parent", "name"]
      },
      "Response«Page«RoleVO»»": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "",
            "default": "ResponseCode.SUCCESS.code()",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "",
            "default": "ResponseCode.SUCCESS.message()",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Page%C2%ABRoleVO%C2%BB",
            "description": ""
          }
        }
      },
      "URI": {
        "type": "object",
        "properties": {
          "string": {
            "type": "string",
            "description": "The string form of this URI.",
            "nullable": true
          },
          "absolute": {
            "type": "boolean",
            "description": "Tells whether or not this URI is absolute.\n\n<p> A URI is absolute if, and only if, it has a scheme component. </p>",
            "nullable": true
          },
          "opaque": {
            "type": "boolean",
            "description": "Tells whether or not this URI is opaque.\n\n<p> A URI is opaque if, and only if, it is absolute and its\nscheme-specific part does not begin with a slash character ('/').\nAn opaque URI has a scheme, a scheme-specific part, and possibly\na fragment; all other components are undefined. </p>",
            "nullable": true
          },
          "rawSchemeSpecificPart": {
            "type": "string",
            "description": "Returns the raw scheme-specific part of this URI.  The scheme-specific\npart is never undefined, though it may be empty.\n\n<p> The scheme-specific part of a URI only contains legal URI\ncharacters. </p>",
            "nullable": true
          },
          "rawAuthority": {
            "type": "string",
            "description": "Returns the raw authority component of this URI.\n\n<p> The authority component of a URI, if defined, only contains the\ncommercial-at character ({@code '@'}) and characters in the\n<i>unreserved</i>, <i>punct</i>, <i>escaped</i>, and <i>other</i>\ncategories.  If the authority is server-based then it is further\nconstrained to have valid user-information, host, and port\ncomponents. </p>",
            "nullable": true
          },
          "rawUserInfo": {
            "type": "string",
            "description": "Returns the raw user-information component of this URI.\n\n<p> The user-information component of a URI, if defined, only contains\ncharacters in the <i>unreserved</i>, <i>punct</i>, <i>escaped</i>, and\n<i>other</i> categories. </p>",
            "nullable": true
          },
          "rawPath": {
            "type": "string",
            "description": "Returns the raw path component of this URI.\n\n<p> The path component of a URI, if defined, only contains the slash\ncharacter ({@code '/'}), the commercial-at character ({@code '@'}),\nand characters in the <i>unreserved</i>, <i>punct</i>, <i>escaped</i>,\nand <i>other</i> categories. </p>",
            "nullable": true
          },
          "rawQuery": {
            "type": "string",
            "description": "Returns the raw query component of this URI.\n\n<p> The query component of a URI, if defined, only contains legal URI\ncharacters. </p>",
            "nullable": true
          },
          "rawFragment": {
            "type": "string",
            "description": "Returns the raw fragment component of this URI.\n\n<p> The fragment component of a URI, if defined, only contains legal URI\ncharacters. </p>",
            "nullable": true
          }
        }
      },
      "Response«Page«UserOperationRecordVO»»": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "",
            "default": "ResponseCode.SUCCESS.code()",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "",
            "default": "ResponseCode.SUCCESS.message()",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Page%C2%ABUserOperationRecordVO%C2%BB",
            "description": ""
          }
        }
      },
      "MenuEditDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "extra": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "required": ["id", "name"]
      },
      "UserLoginInfoVO": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": ""
          },
          "userVO": {
            "$ref": "#/components/schemas/UserVO",
            "description": ""
          }
        }
      },
      "UserVO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": ""
          },
          "username": {
            "type": "string",
            "description": "账户"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "isEnable": {
            "type": "string",
            "description": "是否启用"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleVO",
              "description": "com.afdi.ambition.common.vo.user.RoleVO"
            },
            "description": ""
          },
          "createTime": {
            "type": "string",
            "description": "创建时间"
          }
        }
      },
      "PersonalizationDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "background": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        }
      },
      "ResponseEntity«Resource»": {
        "type": "object",
        "properties": {
          "inputStream": {
            "$ref": "#/components/schemas/InputStream",
            "description": "Return an{@link InputStream} for the content of an underlying resource.\n<p>It is usually expected that every such call creates a <i>fresh</i> stream.\n<p>This requirement is particularly important when you consider an API such\nas JavaMail, which needs to be able to read the stream multiple times when\ncreating mail attachments. For such a use case, it is <i>required</i>\nthat each{@code getInputStream()} call returns a fresh stream."
          },
          "readable": {
            "type": "boolean",
            "description": "Indicate whether non-empty contents of this resource can be read via\n{@link #getInputStream()}.\n<p>Will be{@code true} for typical resource descriptors that exist\nsince it strictly implies{@link #exists()} semantics as of 5.1.\nNote that actual content reading may still fail when attempted.\nHowever, a value of{@code false} is a definitive indication\nthat the resource content cannot be read.",
            "nullable": true
          },
          "open": {
            "type": "boolean",
            "description": "Indicate whether this resource represents a handle with an open stream.\nIf{@code true}, the InputStream cannot be read multiple times,\nand must be read and closed to avoid resource leaks.\n<p>Will be{@code false} for typical resource descriptors.",
            "nullable": true
          },
          "file": {
            "$ref": "#/components/schemas/File",
            "description": "Returns the abstract pathname of this abstract pathname's parent,\nor{@code null} if this pathname does not name a parent\ndirectory.\n\n<p> The <em>parent</em> of an abstract pathname consists of the\npathname's prefix, if any, and each name in the pathname's name\nsequence except for the last.  If the name sequence is empty then\nthe pathname does not name a parent directory."
          },
          "uRL": {
            "type": "string",
            "description": "Return a URL handle for this resource.",
            "nullable": true
          },
          "uRI": {
            "$ref": "#/components/schemas/URI",
            "description": "Return a URI handle for this resource."
          },
          "contentAsByteArray": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Return the contents of this resource as a byte array.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "Determine the filename for this resource &mdash; typically the last\npart of the path &mdash; for example,{@code \"myfile.txt\"}.\n<p>Returns{@code null} if this type of resource does not\nhave a filename.\n<p>Implementations are encouraged to return the filename unencoded.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Return a description for this resource,\nto be used for error output when working with the resource.\n<p>Implementations are also encouraged to return this value\nfrom their{@code toString} method.",
            "nullable": true
          }
        }
      },
      "ResponseUserLoginInfoVO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": ""
          },
          "message": {
            "type": "string",
            "description": "",
            "default": "ResponseCode.SUCCESS.message()"
          },
          "data": {
            "$ref": "#/components/schemas/UserLoginInfoVO",
            "description": ""
          }
        }
      },
      "MenuSortDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "parent": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "ancestors": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "",
            "nullable": true
          }
        },
        "required": ["id", "sort"]
      },
      "RoleMenuDTO": {
        "type": "object",
        "properties": {
          "menuId": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "identifier": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        }
      },
      "PageUserVO": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserVO",
              "description": ""
            },
            "description": "查询数据列表",
            "default": "Collections.emptyList()"
          },
          "total": {
            "type": "integer",
            "description": "总数",
            "default": 0
          },
          "size": {
            "type": "integer",
            "description": "每页显示条数，默认 10",
            "default": 10
          },
          "current": {
            "type": "integer",
            "description": "当前页",
            "default": 1
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem",
              "description": "com.baomidou.mybatisplus.core.metadata.OrderItem"
            },
            "description": "排序字段信息",
            "default": "new ArrayList<>()"
          },
          "optimizeCountSql": {
            "type": "boolean",
            "description": "自动优化 COUNT SQL",
            "default": "true"
          },
          "searchCount": {
            "type": "boolean",
            "description": "是否进行 count 查询",
            "default": "true"
          },
          "optimizeJoinOfCountSql": {
            "type": "boolean",
            "description": "{@link #optimizeJoinOfCountSql()}",
            "default": "true"
          },
          "maxLimit": {
            "type": "integer",
            "description": "单页分页条数限制"
          },
          "countId": {
            "type": "string",
            "description": "countId"
          }
        }
      },
      "RoleDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "名称",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "描述",
            "nullable": true
          },
          "roleMenuDTOList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleMenuDTO",
              "description": "com.afdi.ambition.common.dto.user.RoleMenuDTO"
            },
            "description": "",
            "nullable": true
          }
        },
        "required": ["name", "roleMenuDTOList"]
      },
      "ResponsePageUserVO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": ""
          },
          "message": {
            "type": "string",
            "description": "",
            "default": "ResponseCode.SUCCESS.message()"
          },
          "data": {
            "$ref": "#/components/schemas/PageUserVO",
            "description": ""
          }
        }
      },
      "RoleEditDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "名称",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "描述",
            "nullable": true
          },
          "roleMenuDTOList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleMenuDTO",
              "description": "com.afdi.ambition.common.dto.user.RoleMenuDTO"
            },
            "description": "",
            "nullable": true
          }
        },
        "required": ["id", "name", "roleMenuDTOList"]
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "账户",
            "pattern": "^[a-zA-Z][a-zA-Z0-9]*$|^[0-9][a-zA-Z0-9]*[a-zA-Z]$"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "isEnable": {
            "type": "string",
            "description": "是否启用"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleVO",
              "description": "com.afdi.ambition.common.vo.user.RoleVO"
            },
            "description": ""
          }
        },
        "required": ["username", "nickname", "roles"]
      },
      "UserEditDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": ""
          },
          "username": {
            "type": "string",
            "description": "账户",
            "pattern": "^[a-zA-Z][a-zA-Z0-9]*$|^[0-9][a-zA-Z0-9]*[a-zA-Z]$"
          },
          "nickname": {
            "type": "string",
            "description": "昵称"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "isEnable": {
            "type": "string",
            "description": "是否启用"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleVO",
              "description": "com.afdi.ambition.common.vo.user.RoleVO"
            },
            "description": ""
          }
        },
        "required": ["id", "username", "nickname", "roles"]
      }
    },
    "securitySchemes": {}
  },
  "servers": []
}
